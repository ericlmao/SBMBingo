plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

def id = "SBMBingo"
def group = 'games.negative.bingo'
def version = '1.0.0-SNAPSHOT'
repositories {
    mavenCentral()
    // Spigot Repository
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }

    // Sonatype Repository
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }

    // Negative Games Repository
    maven { url 'https://repo.negative.games/repository/maven-public/' }
}

dependencies {
    // Annotations
    compileOnly("org.projectlombok:lombok:1.18.26")
    annotationProcessor("org.projectlombok:lombok:1.18.26")
    compileOnly("org.jetbrains:annotations:24.0.1")
    annotationProcessor("org.jetbrains:annotations:24.0.1")

    // Apis
    compileOnly("org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT")

    // Framework / Backend
    implementation("games.negative.framework:minecraft-framework:3.3.6")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    build {
        dependsOn(shadowJar)
    }
}

shadowJar {
    archiveBaseName.set("${id}-${version}")
    archiveClassifier.set("")
    archiveVersion.set("")

    // Shade "games.negative.framework" into "games.negative.punishments.libs.framework"
    relocate "games.negative.framework", "${group}.libs.framework"
}
